<UserControl x:Class="BookInventoryAdminProgram.View.InventoryPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BookInventoryAdminProgram.View"
             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI" 
             xmlns:Converter="clr-namespace:BookInventoryAdminProgram.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="818" d:DesignWidth="1080">
    <UserControl.Resources>
        <Converter:ListToStringConverter x:Key="ListToStringConverter"/>
        <Converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="InnerDataGridStyle" TargetType="DataGrid">
            <!-- Set initial visibility to visible -->
            <Setter Property="Visibility" Value="Visible"/>
            
            <!-- set initial styling for datagrid -->
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="AutoGenerateColumns" Value="True"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
            <Setter Property="FontFamily" Value="{StaticResource Poppins}"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
      
            <Style.Triggers>
                <!-- when no items set to collapsed -->
                <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <GroupBox Header="Inventory view" Grid.Row="1"
                      Grid.Column="1"
                      adonisExtensions:LayerExtension.Layer="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <DockPanel>
                    <!--ComboBox Width="100" Height="30" adonisExtensions:WatermarkExtension.Watermark="Author"
                              Margin="0,0,10,0"
                              IsEditable="True">
                        <ComboBoxItem Content="Author"></ComboBoxItem>
                    </ComboBox>
                    
                    <ComboBox Width="100" Height="30" adonisExtensions:WatermarkExtension.Watermark="Genre"
                              Margin="0,0,10,0"
                              IsEditable="True">
                        <ComboBoxItem Content="Genre"></ComboBoxItem>
                    </ComboBox>

                    <Border Width="2"
                            Background="LightGray"
                            CornerRadius="2"
                            Height="45"
                            Margin="0,0,10,0"/-->

                    <ComboBox Width="100" Height="30" adonisExtensions:WatermarkExtension.Watermark="Sales"
                              Margin="0,0,10,0"
                              IsEditable="True"
                              Text="{Binding ComboBoxTypedText[Sales], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding SalesComboBoxOptions}"
                              SelectedItem="{Binding SelectedItem[Sales], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    </ComboBox>

                    <ComboBox Width="100" Height="30" adonisExtensions:WatermarkExtension.Watermark="Type"
                              Margin="0,0,10,0"
                              IsEditable="True"
                              Text="{Binding ComboBoxTypedText[Type], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding TypeComboBoxOptions}"
                              SelectedItem="{Binding SelectedItem[Type], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    </ComboBox>

                    <ComboBox Width="100" Height="30" adonisExtensions:WatermarkExtension.Watermark="Modifier"
                              Margin="0,0,10,0"
                              IsEditable="True"
                              Text="{Binding ComboBoxTypedText[Modifier], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding ModifierComboBoxOptions}"
                              SelectedItem="{Binding SelectedItem[Modifier], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    </ComboBox>
                    <Border Background="#1f2029" Width="150"
                            Height="30"
                            CornerRadius="15"
                            Margin="0,0,10,0">
                        <TextBox adonisExtensions:WatermarkExtension.Watermark="Quantity ..."
                                 adonisExtensions:CursorSpotlightExtension.RelativeSpotlightSize="0"
                                 Background="Transparent"
                                 FontFamily="{StaticResource Poppins}"
                                 FontWeight="Regular"
                                 BorderThickness="0"
                                 FontSize="11"
                                 Padding="5,1,0,0"
                                 Text="{Binding ComboBoxQueryQuantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Border>




                    <DockPanel HorizontalAlignment="Right" Margin="0,0,10,0">
                        <Border Background="#1f2029" Width="250"
                                Height="40"
                                CornerRadius="25"
                                Margin="0,0,10,0">
                            <TextBox adonisExtensions:WatermarkExtension.Watermark="Book Search ..."
                                     adonisExtensions:CursorSpotlightExtension.RelativeSpotlightSize="0"
                                     Background="Transparent"
                                     FontFamily="{StaticResource Poppins}"
                                     Text="{Binding SearchFieldValue, UpdateSourceTrigger=PropertyChanged}"
                                     FontWeight="Regular"
                                     BorderThickness="0"
                                     FontSize="11"/>
                        </Border>
                        <Button Content="&#x1F50E;&#xFE0E;"
                                FontSize="20"
                                adonisExtensions:CornerRadiusExtension.CornerRadius="25"
                                Height="40"
                                Width="40"
                                Background="#1f2029"
                                BorderThickness="0"
                                Padding="0,0,1,0"
                                Command="{Binding InventorySearchButtonCommand}"/>

                    </DockPanel>
                </DockPanel>


                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <DockPanel>
                        <Expander Header="Authors" BorderThickness="2"
                                  BorderBrush="White" Margin="0,0,20,10"
                                  IsExpanded="True">
                            <WrapPanel Orientation="Horizontal" Margin="0,10,0,0">
                                <ComboBox Width="90" Height="30" adonisExtensions:WatermarkExtension.Watermark="Author"
                                          Margin="0,0,10,0"
                                          IsEditable="True"
                                          ItemsSource="{Binding PresentAGList[Author]}"
                                          SelectedItem="{Binding SelectedItemAG[Author]}">
                                    <!--ComboBoxItem Content="Stock"></ComboBoxItem-->
                                </ComboBox>

                                <Button Content="Add"
                                        FontSize="10"
                                        Height="20"
                                        Width="70"
                                        Background="#1f2029"
                                        Margin="0,0,10,0"
                                        Command="{Binding AddSearchListItem}"
                                        CommandParameter="Author"/>

                                <Border Width="2"
                                        Background="LightGray"
                                        CornerRadius="2"
                                        Height="35"
                                        Margin="0,0,10,0"/>

                                <ComboBox Width="90" Height="30" adonisExtensions:WatermarkExtension.Watermark="Search List"
                                          Margin="0,0,10,0"
                                          IsEditable="True"
                                          ItemsSource="{Binding SearchList[Author]}"
                                          SelectedItem="{Binding SelectedSearchListItem[Author]}">
                                    <!--ComboBoxItem Content="Stock"></ComboBoxItem-->                                   
                                </ComboBox>
                                <StackPanel>
                                    <Button Content="Remove"
                                            FontSize="10"
                                            Height="20"
                                            Width="70"
                                            Background="#1f2029"
                                            Command="{Binding RemoveSearchListItem}"
                                            CommandParameter="Author,One"
                                            Margin="0,0,0,5"/>
                                    <Button Content="Remove All"
                                            FontSize="10"
                                            Height="20"
                                            Width="70"
                                            Background="#1f2029"
                                            Command="{Binding RemoveSearchListItem}"
                                            CommandParameter="Author,All"/>
                                </StackPanel>

                            </WrapPanel>
                        </Expander>
                        <Expander Header="Genres" BorderThickness="2"
                                  BorderBrush="White" Margin="0,0,10,10"
                                  IsExpanded="True">
                            <WrapPanel Orientation="Horizontal" Margin="0,10,0,0">
                                <ComboBox Width="90" Height="30" adonisExtensions:WatermarkExtension.Watermark="Genre"
                                  Margin="0,0,10,0"
                                  IsEditable="True"
                                  ItemsSource="{Binding PresentAGList[Genre]}"
                                  SelectedItem="{Binding SelectedItemAG[Genre]}">
                                </ComboBox>

                                <Button Content="Add"
                                        FontSize="10"
                                        Height="20"
                                        Width="70"
                                        Background="#1f2029"
                                        Margin="0,0,10,0"
                                        Command="{Binding AddSearchListItem}"
                                        CommandParameter="Genre"/>
                                
                                <Border Width="2"
                                Background="LightGray"
                                CornerRadius="2"
                                Height="35"
                                Margin="0,0,10,0"/>

                                <ComboBox Width="90" Height="30" adonisExtensions:WatermarkExtension.Watermark="Search List"
                                          Margin="0,0,10,0"
                                          IsEditable="True"
                                          ItemsSource="{Binding SearchList[Genre]}"
                                          SelectedItem="{Binding SelectedSearchListItem[Genre]}">
                                    <!--ComboBoxItem Content="Stock"></ComboBoxItem-->
                                </ComboBox>
                                <StackPanel>
                                    <Button Content="Remove"
                                            FontSize="10"
                                            Height="20"
                                            Width="70"
                                            Background="#1f2029"
                                            Command="{Binding RemoveSearchListItem}"
                                            CommandParameter="Genre,One"
                                            Margin="0,0,0,5"/>
                                    <Button Content="Remove All"
                                            FontSize="10"
                                            Height="20"
                                            Width="70"
                                            Background="#1f2029"
                                            Command="{Binding RemoveSearchListItem}"
                                            CommandParameter="Genre,All"/>
                                </StackPanel>
                            </WrapPanel>
                        </Expander>
                        <Expander Header="Options" BorderThickness="2"
                                  BorderBrush="White" Margin="5,0,0,10"
                                  IsExpanded="True"
                                  HorizontalAlignment="Left">
                            <WrapPanel Margin="0,10,0,0">
                                <DockPanel>
                                    <StackPanel Margin="0,0,10,0">
                                        <CheckBox Content="ISBN" IsChecked="{Binding HeaderVisibility[ISBN]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="ISBN"/>
                                        <CheckBox Content="Title" IsChecked="{Binding HeaderVisibility[Title]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="Title"/>
                                        <CheckBox Content="Price" IsChecked="{Binding HeaderVisibility[Price]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="Price"/>
                                        <CheckBox Content="PricePerUnit" IsChecked="{Binding HeaderVisibility[PricePerUnit]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="PricePerUnit"/>
                                        <CheckBox Content="Stock" IsChecked="{Binding HeaderVisibility[BookStock]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="BookStock"/>

                                    </StackPanel>
                                    <StackPanel Margin="0,0,10,0">
                                        <CheckBox Content="Author" IsChecked="{Binding HeaderVisibility[Author]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="Author"/>
                                        <CheckBox Content="Genre" IsChecked="{Binding HeaderVisibility[Genre]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="Genre"/>
                                        <CheckBox Content="ReleaseDate" IsChecked="{Binding HeaderVisibility[ReleaseDate]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="ReleaseDate"/>
                                        <CheckBox Content="Publisher" IsChecked="{Binding HeaderVisibility[Publisher]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="Publisher"/>
                                        <CheckBox Content="All-Time Sales" IsChecked="{Binding HeaderVisibility[AllTimeSales]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="AllTimeSales"/>
                                    </StackPanel>
                                    <StackPanel Margin="0,0,10,0">
                                        <CheckBox Content="Yearly Sales" IsChecked="{Binding HeaderVisibility[YearlySales]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="YearlySales"/>
                                        <CheckBox Content="Monthly Sales" IsChecked="{Binding HeaderVisibility[MonthlySales]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="MonthlySales"/>
                                        <CheckBox Content="Daily Sales" IsChecked="{Binding HeaderVisibility[DailySales]}"
                                                  Command="{Binding ToggleHeaderVisibilityCommand}"
                                                  CommandParameter="DailySales"/>
                                    </StackPanel>
                                </DockPanel>
                            </WrapPanel>
                        </Expander>
                    </DockPanel>

                    <!-- WPF doesnt pass down the datacontext to children in a datagrid.
                         Children in a datagrid also dont have a way to set their own datacontext.
                    
                         The only functional workaround i found is to create a dummyElement
                         (which by default inherits the datacontext) and using that as a source
                         when binding-->
                    <FrameworkElement Name="dummyElement" Visibility="Hidden"/>
                    <DataGrid Name="BookstoreInventoryDatagrid"
                              Grid.Row="1"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Left"
                              FontFamily="{StaticResource Poppins}"
                              ScrollViewer.CanContentScroll="True"
                              CanUserAddRows="False"
                              SelectionUnit="CellOrRowHeader"
                              IsReadOnly="True"
                              AutoGenerateColumns="False"
                              AlternatingRowBackground="#323341"
                              ItemsSource="{Binding InventoryDatagrid}">
                        <DataGrid.Columns>
                            <!-- It was the only way. I had to repeat the code. -->
                            <DataGridTextColumn Header="ISBN" Binding="{Binding Path=ISBN}"
                                                Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[ISBN],
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <DataGridTextColumn Header="Title" Binding="{Binding Path=Title}"
                                                Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[Title],
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <DataGridTextColumn Header="Price (£)" Binding="{Binding Path=Price}"
                                                Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[Price],
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            
                            <DataGridTemplateColumn Header="PricePerUnit (£)"
                                                    Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[PricePerUnit],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <!-- Bind to the properties of the current BookInfo item -->
                                        <DataGrid ItemsSource="{Binding PricePerUnit}"
                                                  Style="{StaticResource InnerDataGridStyle}"
                                                  RowBackground="#262630"
                                                  AlternatingRowBackground="#323341"
                                                  AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <!--DataGridTemplateColumn Header="Release Date">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=SetDate, StringFormat=d}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn-->
                                                <DataGridTextColumn Header="SetDate" Binding="{Binding SetDate, StringFormat=d}"/>
                                                <DataGridTextColumn Header="PricePerUnit" Binding="{Binding PricePerUnit}"/>
                                                <DataGridTextColumn Header="SalePrice" Binding="{Binding SalePrice}"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Stock" Binding="{Binding Path=BookStock}"
                                                Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[BookStock],
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <DataGridTextColumn Header="Author" Binding="{Binding Path=Authors,Converter={StaticResource ListToStringConverter}}"
                                                Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[Author],
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <DataGridTextColumn Header="Genre" Binding="{Binding Path=Genres,Converter={StaticResource ListToStringConverter}}"
                                                Width="200"
                                                Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[Genre],
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <DataGridTemplateColumn Header="Release Date" Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[ReleaseDate],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=ReleaseDate, StringFormat=d}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Publisher" Binding="{Binding Path=PublisherName}"
                                                Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[Publisher],
                                Converter={StaticResource BooleanToVisibilityConverter}}"/>

                            <!-- Only God knows why i cant puts rowbackgrounds in
                                 the styling and have them work -->
                            <!--DataGridTemplateColumn Header="All-Time Sales" Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[AllTimeSales],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DataGrid ItemsSource="{Binding InventoryDatagrid}"
                                                  Style="{StaticResource InnerDataGridStyle}"
                                                  RowBackground="#262630"
                                                  AlternatingRowBackground="#323341">
                                            <DataGridTextColumn Header="QuantitySold" Binding="{Binding Path=AllTimeSales}"/>
                                            <DataGridTextColumn Header="Revenue" Binding="{Binding Path=AllTimeRevenue}"/>
                                        </DataGrid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn-->
                            <DataGridTemplateColumn Header="AllTimeSales"
                                                    Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[AllTimeSales],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <!-- Bind to the properties of the current BookInfo item -->
                                        <DataGrid ItemsSource="{Binding AllTimeSales}"
                                                  Style="{StaticResource InnerDataGridStyle}"
                                                  RowBackground="#262630"
                                                  AlternatingRowBackground="#323341"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>



                            <DataGridTemplateColumn Header="Yearly Sales" Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[YearlySales],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DataGrid ItemsSource="{Binding YearlySales}"
                                                  Style="{StaticResource InnerDataGridStyle}"
                                                  RowBackground="#262630"
                                                  AlternatingRowBackground="#323341"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Monthly Sales" Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[MonthlySales],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DataGrid ItemsSource="{Binding MonthlySales}"
                                                  Style="{StaticResource InnerDataGridStyle}"
                                                  RowBackground="#262630"
                                                  AlternatingRowBackground="#323341"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--DataGridTemplateColumn Header="Daily Sales" Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[DailySales],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DataGrid ItemsSource="{Binding DailySales}"
                                                  Style="{StaticResource InnerDataGridStyle}"
                                                  RowBackground="#262630"
                                                  AlternatingRowBackground="#323341"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn-->
                            <DataGridTemplateColumn Header="Daily Sales" Visibility="{Binding 
                                Source={x:Reference dummyElement},
                                Path=DataContext.HeaderVisibility[DailySales],
                                Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DataGrid ItemsSource="{Binding DailySales}"
                                                  Style="{StaticResource InnerDataGridStyle}"
                                                  RowBackground="#262630"
                                                  AlternatingRowBackground="#323341"
                                                  AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <!--DataGridTemplateColumn Header="SalesDate">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=SalesDate, StringFormat=d}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn-->
                                                <DataGridTextColumn Header="SalesDate" Binding="{Binding SalesDate, StringFormat=d}"/>
                                                <DataGridTextColumn Header="QuantitySold" Binding="{Binding QuantitySold}"/>
                                                <DataGridTextColumn Header="Revenue" Binding="{Binding Revenue}"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>

                    </DataGrid>
                    
                </Grid>




                <!--ScrollViewer Grid.Row="1">
                    <DataGrid Name="dataGrid1"
                              VerticalAlignment="Top"
                              HorizontalAlignment="Left"
                              FontFamily="{StaticResource Poppins}"
                              ScrollViewer.CanContentScroll="True"
                              ScrollViewer.IsDeferredScrollingEnabled="True" 
                              ScrollViewer.HorizontalScrollBarVisibility="Visible">

                    </DataGrid>
                </ScrollViewer-->
            </Grid>
        </GroupBox>
        <!-- loading screen -->
        <Grid Background="Transparent" Grid.RowSpan="2"
              Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Rectangle Fill="#1f2029" Opacity="1"/>
            <Border Background="#323341"
                    Width="400" Height="150"
                    CornerRadius="20">
                
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="Loading..." TextAlignment="Center"
                               Foreground="white"
                               Margin="0,0,0,5"
                               FontSize="20"
                               FontFamily="{StaticResource Poppins}"
                               FontWeight="Medium"/>
                    <TextBlock Text="Updating datagrid" TextAlignment="Center"
                               Foreground="white"
                               Margin="0,0,0,10"
                               FontSize="15"
                               FontFamily="{StaticResource Poppins}"
                               FontWeight="Regular"/>
                    <ProgressBar IsIndeterminate="True" Width="350" Height="20" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>
            </Border>

        </Grid>
    </Grid>
</UserControl>
